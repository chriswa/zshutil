#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const os = require('os');

const homeDir = os.homedir();
const claudeSettingsPath = path.join(homeDir, '.claude', 'settings.json');
const zshutilPath = path.join(homeDir, 'zshutil');
const claudeStatuslinePath = path.join(zshutilPath, 'bin', 'internal', 'claude-statusline');

const expectedStatusLine = {
  type: "command",
  command: claudeStatuslinePath
};

function createBackup(filePath) {
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
  const fileName = path.basename(filePath);
  const backupPath = path.join(os.tmpdir(), `${fileName}.backup.${timestamp}`);

  fs.copyFileSync(filePath, backupPath);
  console.log(`Created backup: ${backupPath}`);
  return backupPath;
}

function main() {
  try {
    console.log(`Working with file: ${claudeSettingsPath}`);
    
    // Check if ~/.claude/settings.json exists
    if (!fs.existsSync(claudeSettingsPath)) {
      console.error('Error: ~/.claude/settings.json file not found');
      process.exit(1);
    }

    // Check if ~/zshutil/bin/internal/claude-statusline exists
    if (!fs.existsSync(claudeStatuslinePath)) {
      console.error('Error: ~/zshutil/bin/internal/claude-statusline not found');
      process.exit(1);
    }

    // Create backup before making changes
    createBackup(claudeSettingsPath);

    // Read and parse the current settings.json
    const settingsContent = fs.readFileSync(claudeSettingsPath, 'utf8');
    let settings;
    
    try {
      settings = JSON.parse(settingsContent);
    } catch (parseError) {
      console.error('Error: Invalid JSON in ~/.claude/settings.json');
      process.exit(1);
    }

    // Check if statusLine already exists and matches expected values
    if (settings.statusLine && 
        settings.statusLine.type === expectedStatusLine.type &&
        settings.statusLine.command === expectedStatusLine.command) {
      console.log('Claude statusline is already installed in ~/.claude/settings.json');
      process.exit(0);
    }

    // Initialize statusLine property if it doesn't exist
    if (!settings.statusLine) {
      settings.statusLine = {};
    }

    // Set the required properties
    settings.statusLine.type = expectedStatusLine.type;
    settings.statusLine.command = expectedStatusLine.command;

    // Write the updated settings back to file with pretty formatting
    const updatedContent = JSON.stringify(settings, null, 2) + '\n';
    fs.writeFileSync(claudeSettingsPath, updatedContent);
    
    console.log('Successfully configured Claude statusline in ~/.claude/settings.json');
    console.log(`Set statusLine.type: ${expectedStatusLine.type}`);
    console.log(`Set statusLine.command: ${expectedStatusLine.command}`);
    
  } catch (error) {
    console.error('Error:', error.message);
    process.exit(1);
  }
}

main();