#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const os = require('os');

const homeDir = os.homedir();
const zshrcPath = path.join(homeDir, '.zshrc');
const zshutilPath = path.join(homeDir, 'zshutil');
const sourceLine = `source ${zshutilPath}/zshrc/index.sh`;

function main() {
  try {
    console.log(`Working with file: ${zshrcPath}`);
    
    // Check if ~/.zshrc exists
    if (!fs.existsSync(zshrcPath)) {
      console.error('Error: ~/.zshrc file not found');
      process.exit(1);
    }

    // Check if ~/zshutil exists
    if (!fs.existsSync(zshutilPath)) {
      console.error('Error: ~/zshutil directory not found');
      process.exit(1);
    }

    // Read the current .zshrc content
    const zshrcContent = fs.readFileSync(zshrcPath, 'utf8');

    // Check if the source line already exists
    if (zshrcContent.includes(sourceLine)) {
      console.log('zshutil is already installed in ~/.zshrc');
      process.exit(0);
    }

    // Add the source line to the end of the file with proper spacing
    let newContent = zshrcContent;
    
    // Ensure the file ends with a newline
    if (!newContent.endsWith('\n')) {
      newContent += '\n';
    }
    
    // Add blank line, source line, and final newline
    newContent += `\n${sourceLine}\n`;

    // Write the updated content back to .zshrc
    fs.writeFileSync(zshrcPath, newContent);
    
    console.log('Successfully added zshutil source line to ~/.zshrc');
    console.log(`Added: ${sourceLine}`);
    
  } catch (error) {
    console.error('Error:', error.message);
    process.exit(1);
  }
}

main();